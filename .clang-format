# file: .clang-format

# TOP

# https://clang.llvm.org/docs/ClangFormatStyleOptions.html
#
# $ clang-format --style LLVM --dump-config >> .clang-format
---

BasedOnStyle: LLVM # LLVM | Google | Chromium | Mozilla | WebKit | Microsoft | GNU | InheritParentConfig

---
Language:       Cpp

#------------------------------------------------------------------------------
# Essential
#------------------------------------------------------------------------------
# TabWidth:  4    #  <number_of_spaces_per_tab> character represents in the formatted output. It essentially defines the size or width of a tab stop. Since IndentWidth is a multiple of TabWidth, clang-format will insert exactly the number of spaces required for each indentation level.
# UseTab: Always
ColumnLimit: 160
IndentWidth: 8    # <number_of_spaces_per_tab> (multiple of TabWidth)

#------------------------------------------------------------------------------
# Macros
#------------------------------------------------------------------------------
AlignConsecutiveMacros: true
IndentPPDirectives: BeforeHash # None | AfterHash | BeforeHash

#------------------------------------------------------------------------------
# Rest
#------------------------------------------------------------------------------
# PPIndentWidth: 4 # -1 | 1, 2, ...
# AllowShortIfStatementsOnASingleLine: AllIfsAndElse
BreakBeforeBraces: Linux # Custom | Attach | Linux | Mozilla | Stroustrup | Allman | Whitesmiths | GNU | Webkit
PointerAlignment: Right # Left | Right | Middle

#------------------------------------------------------------------------------
# VANITY
#------------------------------------------------------------------------------
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: true # Choices: Never
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: All
# AllowShortIfStatementsOnASingleLine: OnlyFirstIf
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false

AlignAfterOpenBracket: Align
AlignArrayOfStructures: None
AlignConsecutiveAssignments:
  Enabled:         true
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    true
AlignConsecutiveBitFields:
  Enabled:         true
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignConsecutiveDeclarations:
  Enabled:         true
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignConsecutiveMacros:
  Enabled:         true
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  PadOperators:    false
AlignEscapedNewlines: Right
AlignOperands:   Align
AlignTrailingComments:
  Kind:            Always
  OverEmptyLines:  0

# EmptyLineAfterAccessModifier: Never
# EmptyLineBeforeAccessModifier: LogicalBlock
KeepEmptyLinesAtTheStartOfBlocks: true
MaxEmptyLinesToKeep: 3 # Inspired by lua.h (beautiful header file)
...

# BOT

